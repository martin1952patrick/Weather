{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport const useLoading = callback => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetching = async () => {\n    try {\n      setIsLoading(true);\n      await callback();\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return [fetching, isLoading, error];\n};\n\n_s(useLoading, \"AxZxtnUzare8ll1Rk4kFSeA5V2Q=\");","map":{"version":3,"names":["useState","useLoading","callback","isLoading","setIsLoading","error","setError","fetching","message"],"sources":["/home/martin/Documents/Martin/RAPID/06_weather-app/src/Hooks/useLoading.ts"],"sourcesContent":["import {useState} from 'react'\n\nexport const useLoading = (callback: Function) => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState('')\n\n    const fetching = async () => {\n        try {\n            setIsLoading(true)  \n            await callback()\n        } catch (error: any) {\n            setError(error.message)\n        } finally {\n            setIsLoading(false)\n        }\n    }\n\n    return [fetching, isLoading, error] as const\n}"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAwB;EAAA;;EAC9C,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMO,QAAQ,GAAG,YAAY;IACzB,IAAI;MACAH,YAAY,CAAC,IAAD,CAAZ;MACA,MAAMF,QAAQ,EAAd;IACH,CAHD,CAGE,OAAOG,KAAP,EAAmB;MACjBC,QAAQ,CAACD,KAAK,CAACG,OAAP,CAAR;IACH,CALD,SAKU;MACNJ,YAAY,CAAC,KAAD,CAAZ;IACH;EACJ,CATD;;EAWA,OAAO,CAACG,QAAD,EAAWJ,SAAX,EAAsBE,KAAtB,CAAP;AACH,CAhBM;;GAAMJ,U"},"metadata":{},"sourceType":"module"}
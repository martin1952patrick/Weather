{"ast":null,"code":"var _jsxFileName = \"/home/martin/Documents/Martin/RAPID/Weather/src/components/UI/Loader.tsx\";\nimport React from 'react';\nimport { LoaderWrapper, Spinner } from \"../../styles/Loader.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Loader = _ref => {\n  let {\n    isLoading\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(LoaderWrapper, {\n    isLoading: isLoading,\n    children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Loader;\nexport default Loader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"names":["React","LoaderWrapper","Spinner","Loader","isLoading"],"sources":["/home/martin/Documents/Martin/RAPID/Weather/src/components/UI/Loader.tsx"],"sourcesContent":["import React, {FC} from 'react'\nimport { LoaderWrapper, Spinner } from \"../../styles/Loader.styled\"\n\ninterface ILoaderProps {\n  isLoading: boolean\n}\n\nconst Loader: FC<ILoaderProps> = ({isLoading}) => {\n  return (\n    <LoaderWrapper isLoading={isLoading}>\n        <Spinner>\n        </Spinner>\n    </LoaderWrapper>\n  )\n}\n\nexport default Loader"],"mappings":";AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,4BAAvC;;;AAMA,MAAMC,MAAwB,GAAG,QAAiB;EAAA,IAAhB;IAACC;EAAD,CAAgB;EAChD,oBACE,QAAC,aAAD;IAAe,SAAS,EAAEA,SAA1B;IAAA,uBACI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAPD;;KAAMD,M;AASN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nconst base_url = \"https://api.openweathermap.org/data/2.5/weather?\";\nconst language = \"en\";\nconst units = \"metric\";\nexport const getLocalWeather = async () => {\n  console.log(process.env.REACT_APP_WEATHER_API_KEY);\n  const weather = await axios.get(`${base_url}lat=50.15&lon=28.39&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=${units}&lang=${language}`);\n  return weather.data;\n};\nexport const getWeatherByCityName = async cityName => {\n  try {\n    const weather = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=${process.env.REACT_APP_WEATHER_API_KEY}&units=${units}&lang=${language}`);\n    return weather.data;\n  } catch (error) {\n    if (!cityName) {\n      alert(`${error.response.statusText}. Enter city name again after 3 second`);\n    }\n  }\n};\nexport const getWeatherByCoordinates = async (lat, lon) => {\n  try {\n    const weather = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=${units}&lang=${language}`);\n    return weather.data;\n  } catch (error) {\n    if (lat && lon) {\n      alert(`${error.response.statusText}, coordinates have not been found`);\n    }\n  }\n}; // export const get4daysWeather = async () => {\n//     try {\n//         const weather = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=48.48&lon=22.22&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\n//         return weather.data\n//     } catch(error: any) {\n//         alert(error.response.statusText)\n//     }\n// }","map":{"version":3,"names":["axios","base_url","language","units","getLocalWeather","console","log","process","env","REACT_APP_WEATHER_API_KEY","weather","get","data","getWeatherByCityName","cityName","error","alert","response","statusText","getWeatherByCoordinates","lat","lon"],"sources":["/home/martin/Documents/Martin/RAPID/06_weather-app/src/api/WeatherService.ts"],"sourcesContent":["import axios from \"axios\";\nimport { ICity } from \"../types/city\";\n\nconst base_url = \"https://api.openweathermap.org/data/2.5/weather?\"\nconst language = \"en\";\nconst units = \"metric\"\n\nexport const getLocalWeather = async () => {\n    console.log(process.env.REACT_APP_WEATHER_API_KEY)\n    const weather = await axios.get(`${base_url}lat=50.15&lon=28.39&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=${units}&lang=${language}`)\n    return weather.data\n}\n\nexport const getWeatherByCityName = async (cityName: string) => {\n    try {\n        const weather = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=${process.env.REACT_APP_WEATHER_API_KEY}&units=${units}&lang=${language}`)\n        return weather.data\n    } catch(error: any) {\n        if(!cityName) {\n            alert(`${error.response.statusText}. Enter city name again after 3 second`)\n        }\n    }\n}\n\nexport const getWeatherByCoordinates = async (lat: ICity[\"latitude\"], lon: ICity[\"longitude\"]) => {\n    try {\n        const weather = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=${units}&lang=${language}`)\n        return weather.data\n    } catch (error: any) {\n        if(lat && lon) {\n            alert(`${error.response.statusText}, coordinates have not been found`)\n        }\n    }\n}   \n\n// export const get4daysWeather = async () => {\n//     try {\n//         const weather = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=48.48&lon=22.22&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\n//         return weather.data\n//     } catch(error: any) {\n//         alert(error.response.statusText)\n//     }\n// }"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAG,kDAAjB;AACA,MAAMC,QAAQ,GAAG,IAAjB;AACA,MAAMC,KAAK,GAAG,QAAd;AAEA,OAAO,MAAMC,eAAe,GAAG,YAAY;EACvCC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,yBAAxB;EACA,MAAMC,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEV,QAAS,6BAA4BM,OAAO,CAACC,GAAR,CAAYC,yBAA0B,UAASN,KAAM,SAAQD,QAAS,EAAxH,CAAtB;EACA,OAAOQ,OAAO,CAACE,IAAf;AACH,CAJM;AAMP,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,QAAP,IAA4B;EAC5D,IAAI;IACA,MAAMJ,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,qDAAoDG,QAAS,UAASP,OAAO,CAACC,GAAR,CAAYC,yBAA0B,UAASN,KAAM,SAAQD,QAAS,EAAvJ,CAAtB;IACA,OAAOQ,OAAO,CAACE,IAAf;EACH,CAHD,CAGE,OAAMG,KAAN,EAAkB;IAChB,IAAG,CAACD,QAAJ,EAAc;MACVE,KAAK,CAAE,GAAED,KAAK,CAACE,QAAN,CAAeC,UAAW,wCAA9B,CAAL;IACH;EACJ;AACJ,CATM;AAWP,OAAO,MAAMC,uBAAuB,GAAG,OAAOC,GAAP,EAA+BC,GAA/B,KAA2D;EAC9F,IAAI;IACA,MAAMX,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,uDAAsDS,GAAI,QAAOC,GAAI,UAASd,OAAO,CAACC,GAAR,CAAYC,yBAA0B,UAASN,KAAM,SAAQD,QAAS,EAA/J,CAAtB;IACA,OAAOQ,OAAO,CAACE,IAAf;EACH,CAHD,CAGE,OAAOG,KAAP,EAAmB;IACjB,IAAGK,GAAG,IAAIC,GAAV,EAAe;MACXL,KAAK,CAAE,GAAED,KAAK,CAACE,QAAN,CAAeC,UAAW,mCAA9B,CAAL;IACH;EACJ;AACJ,CATM,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/martin/Documents/Martin/RAPID/06_weather-app/src/components/SearchBox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { SearchForm, SearchInput, StyledForm } from '../styles/SearchBox.styled';\nimport debounce from 'lodash.debounce';\nimport Icon from './Icon';\nimport { getCities } from '../api/CityServices';\nimport CitySugesstions from './CitySugesstions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchBox = _ref => {\n  _s();\n\n  let {\n    query,\n    setQuery,\n    setCity\n  } = _ref;\n  useEffect(() => {}, [query]);\n  const [value, setValue] = useState(\"\");\n  const [active, setActive] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n\n  const changeHandler = event => {\n    setValue(event.target.value);\n\n    if (event.target.value !== \"\") {\n      getCities(event.target.value).then(res => {\n        if (res) {\n          setSuggestions(res.data);\n          setActive(true);\n        }\n      });\n    }\n  };\n\n  const debouncedChangeHandler = useMemo(() => debounce(changeHandler, 1000), []);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setWeather(value, null);\n  };\n\n  const setWeather = (cityName, cityItem) => {\n    if (cityName && !cityItem) {\n      setQuery(cityName);\n      setActive(false);\n    }\n\n    if (cityName && cityItem) {\n      setCity(cityItem);\n      setActive(false);\n    }\n\n    setQuery(cityName);\n    setActive(false);\n    setValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(SearchForm, {\n    children: /*#__PURE__*/_jsxDEV(StyledForm, {\n      action: \"\",\n      onSubmit: e => submitHandler(e),\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        isBig: false,\n        iconName: \"loupe\",\n        isLoupe: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n        type: \"text\",\n        placeholder: \"Enter city name\",\n        onChange: debouncedChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), value !== '' ? /*#__PURE__*/_jsxDEV(CitySugesstions, {\n        isActive: active,\n        setWeather: setWeather,\n        cities: suggestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBox, \"xYFOQFUTr30gw6e3L+z8YloaOLQ=\");\n\n_c = SearchBox;\nexport default SearchBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","SearchForm","SearchInput","StyledForm","debounce","Icon","getCities","CitySugesstions","SearchBox","query","setQuery","setCity","value","setValue","active","setActive","suggestions","setSuggestions","changeHandler","event","target","then","res","data","debouncedChangeHandler","submitHandler","preventDefault","setWeather","cityName","cityItem","e"],"sources":["/home/martin/Documents/Martin/RAPID/06_weather-app/src/components/SearchBox.tsx"],"sourcesContent":["import React, {FC, useState, useEffect, useMemo} from 'react'\nimport { SearchForm, SearchInput, StyledForm } from '../styles/SearchBox.styled'\nimport debounce from 'lodash.debounce'\nimport { ICity } from '../types/city';\n\n\nimport Icon from './Icon';\nimport { getCities } from '../api/CityServices';\nimport CitySugesstions from './CitySugesstions';\n\ninterface ISearchProps {\n    query: string;\n    setQuery: (text: string) => void\n    setCity: (city: ICity) => void\n}\n\n\nconst SearchBox:FC<ISearchProps> = ({query, setQuery, setCity}) => {\n\n  useEffect(() => {\n\n  }, [query])\n  \n  const [value, setValue] = useState(\"\")\n  const [active, setActive] = useState(false)\n  const [suggestions, setSuggestions] = useState([])\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value)\n\n    if(event.target.value !== \"\") {\n      getCities(event.target.value)\n      .then(res => {\n        if(res) {\n          setSuggestions(res.data)\n          setActive(true)\n        }\n      })\n    }\n  }\n\n  const debouncedChangeHandler = useMemo(\n    () => debounce(changeHandler, 1000)\n  , []);\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault()\n    setWeather(value, null)\n  }\n\n  const setWeather = (cityName: string, cityItem: any) => {\n    if(cityName && !cityItem) {\n      setQuery(cityName)\n      setActive(false)\n    }\n\n    if(cityName && cityItem) {\n      setCity(cityItem)\n      setActive(false)\n    }\n\n    setQuery(cityName)\n    setActive(false)\n    setValue('')\n  }\n\n\n  return (\n    <SearchForm>\n      <StyledForm action=\"\" onSubmit={(e) => submitHandler(e)}>\n        <Icon isBig={false} iconName=\"loupe\" isLoupe={true}/>\n        <SearchInput type=\"text\" \n          placeholder='Enter city name' \n          onChange={debouncedChangeHandler} \n        />\n        {value !== '' \n      ? <CitySugesstions isActive={active}\n          setWeather={setWeather} \n          cities={suggestions} \n        /> \n      : <></>}\n      </StyledForm>\n      \n    </SearchForm>\n  )\n}\n\nexport default SearchBox"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,OAAxC,QAAsD,OAAtD;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,4BAApD;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAIA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AASA,MAAMC,SAA0B,GAAG,QAAgC;EAAA;;EAAA,IAA/B;IAACC,KAAD;IAAQC,QAAR;IAAkBC;EAAlB,CAA+B;EAEjEZ,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACU,KAAD,CAFM,CAAT;EAIA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMoB,aAAa,GAAIC,KAAD,IAAgD;IACpEN,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAR;;IAEA,IAAGO,KAAK,CAACC,MAAN,CAAaR,KAAb,KAAuB,EAA1B,EAA8B;MAC5BN,SAAS,CAACa,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAT,CACCS,IADD,CACMC,GAAG,IAAI;QACX,IAAGA,GAAH,EAAQ;UACNL,cAAc,CAACK,GAAG,CAACC,IAAL,CAAd;UACAR,SAAS,CAAC,IAAD,CAAT;QACD;MACF,CAND;IAOD;EACF,CAZD;;EAcA,MAAMS,sBAAsB,GAAGxB,OAAO,CACpC,MAAMI,QAAQ,CAACc,aAAD,EAAgB,IAAhB,CADsB,EAEpC,EAFoC,CAAtC;;EAIA,MAAMO,aAAa,GAAIN,KAAD,IAA4B;IAChDA,KAAK,CAACO,cAAN;IACAC,UAAU,CAACf,KAAD,EAAQ,IAAR,CAAV;EACD,CAHD;;EAKA,MAAMe,UAAU,GAAG,CAACC,QAAD,EAAmBC,QAAnB,KAAqC;IACtD,IAAGD,QAAQ,IAAI,CAACC,QAAhB,EAA0B;MACxBnB,QAAQ,CAACkB,QAAD,CAAR;MACAb,SAAS,CAAC,KAAD,CAAT;IACD;;IAED,IAAGa,QAAQ,IAAIC,QAAf,EAAyB;MACvBlB,OAAO,CAACkB,QAAD,CAAP;MACAd,SAAS,CAAC,KAAD,CAAT;IACD;;IAEDL,QAAQ,CAACkB,QAAD,CAAR;IACAb,SAAS,CAAC,KAAD,CAAT;IACAF,QAAQ,CAAC,EAAD,CAAR;EACD,CAdD;;EAiBA,oBACE,QAAC,UAAD;IAAA,uBACE,QAAC,UAAD;MAAY,MAAM,EAAC,EAAnB;MAAsB,QAAQ,EAAGiB,CAAD,IAAOL,aAAa,CAACK,CAAD,CAApD;MAAA,wBACE,QAAC,IAAD;QAAM,KAAK,EAAE,KAAb;QAAoB,QAAQ,EAAC,OAA7B;QAAqC,OAAO,EAAE;MAA9C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,WAAD;QAAa,IAAI,EAAC,MAAlB;QACE,WAAW,EAAC,iBADd;QAEE,QAAQ,EAAEN;MAFZ;QAAA;QAAA;QAAA;MAAA,QAFF,EAMGZ,KAAK,KAAK,EAAV,gBACD,QAAC,eAAD;QAAiB,QAAQ,EAAEE,MAA3B;QACE,UAAU,EAAEa,UADd;QAEE,MAAM,EAAEX;MAFV;QAAA;QAAA;QAAA;MAAA,QADC,gBAKD,qCAXF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CApED;;GAAMR,S;;KAAAA,S;AAsEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}